<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PanelDD.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>